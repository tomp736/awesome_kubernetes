name: 'Terraform'

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - 
      name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
    - 
      name: Checkout secrets repository.
      uses: actions/checkout@v3
      with:
        repository: tomp736/awesome_kubernetes_secrets
        token: ${{ secrets.SECRETS_PAT }}
        path: ./secrets
        ref: main
    - 
      name: Terraform Plan
      uses: labrats-work/action-terraform@main
      with:
        verb: plan
        varsFile: secrets/main.tfvars
        planFile: tfplan

    # # Generates an execution plan for Terraform
    # - name: Terraform Plan
    #   run: terraform plan -input=false --var-file=secrets/main.tfvars

    #   # On push to "main", build or change infrastructure according to Terraform configuration files
    #   # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    # - name: Terraform Apply
    #   run: terraform apply -auto-approve -input=false --var-file=secrets/main.tfvars

    # - name: Commit secrets repository changes.
    #   uses: EndBug/add-and-commit@v9
    #   if: always()
    #   with:
    #     cwd: './secrets'

    # - name: Copy inventory
    #   run: cp secrets/main_inventory ansible/inventory

    # - name: Run playbook
    #   uses: labrats-work/action-ansible@v1
    #   with:
    #     workingDirectory: ./ansible
    #     sshKey: ${{secrets.SSH_PRIVATE_KEY}}
    